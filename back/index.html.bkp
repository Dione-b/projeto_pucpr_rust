<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Tailwind -->
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Conversor de Moedas - PUCPR</title>
  </head>
  <body class="bg-[#8B4513] min-h-screen p-8">
    <div class="max-w-4xl mx-auto">
      <!-- Área para Logomarcas -->
      <div class="flex justify-between items-center mb-8">
        <div
          class="w-60 h-20 bg-white rounded flex items-center justify-center text-white"
        >
          <object
            type="image/svg+xml"
            data="https://www.pucpr.br/wp-content/themes/pucpr/_assets/images/logo-pucpr-vermelha.svg"
            title="Pontifícia Universidade Católica do Paraná"
            alt="Logo PUCPR"
            width="165"
            height="75"
          >
            <img
              src="https://www.pucpr.br/wp-content/themes/pucpr/_assets/images/logo-pucpr-vermelha.png"
              title="Pontifícia Universidade Católica do Paraná"
              alt="Logo PUCPR"
              width="165"
              height="75"
            />
          </object>
        </div>
        <div
          class="w-60 h-20 bg-white rounded flex items-center justify-center text-white"
        >
          <img
            src="https://prev.rust-lang.org/logos/rust-logo-512x512.png"
            width="80"
            height="80"
          />
        </div>
      </div>
      <!-- Texto Explicativo -->
      <div class="bg-white/10 backdrop-blur-sm rounded-xl p-6 mb-8 text-white">
        <h1 class="text-2xl font-bold mb-4">Conversor de Moedas</h1>
        <p class="text-lg leading-relaxed">
          Um conversor de moedas que consome uma API de câmbio e converte
          valores conforme dados de entrada de um CSV/JSON. Utilizando
          WebAssembly e Multithreading. Projeto com fins educacionais para o
          curso de extensão da PUCPR.
        </p>
      </div>
      <div class="flex justify-center items-center space-x-4">
        <label for="amount" class="text-white">Moeda atual: R$</label>
        <div>
          <input
            type="text"
            id="amount"
            class="block w-60 rounded-md border-0 py-1.5 pl-7 pr-20 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm"
            placeholder="0.00"
          />
        </div>

        <div>
          <label for="target_currency" class="text-white"
            >Moeda de destino:</label
          >&nbsp;
          <select
            id="target_currency"
            class="h-full rounded-md border-0 py-0 pl-2 pr-7 text-gray-500 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm"
          >
            <option value="USD">Dólar Americano (USD)</option>
            <option value="EUR">Euro (EUR)</option>
            <option value="GBP">Libra Esterlina (GBP)</option>
            <option value="JPY">Iene Japonês (JPY)</option>
            <option value="CHF">Franco Suíço (CHF)</option>
            <option value="AUD">Dólar Australiano (AUD)</option>
            <option value="CAD">Dólar Canadense (CAD)</option>
          </select>
        </div>

        <div>
          <button
            class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded"
            onclick="convert()"
          >
            Converter
          </button>
        </div>
      </div>

      <p id="result" class="text-center mt-4 text-white"></p>
    </div>
    <script type="module">
      import init, { convert_currency } from "./pkg/back.js";

      // Esta variável garante que o Wasm esteja completamente carregado antes de usá-lo
      let wasmReady = init();

      // Defina a função convert no escopo global
      window.convert = async function convert() {
        // Aguarda o carregamento do WebAssembly
        await wasmReady;

        // Exemplo de JSON com a estrutura correta
        const json_data = JSON.stringify({
          moedas: [
            {
              nome: "Dólar Americano",
              codigo: "USD",
              cotacao: 5.7376,
              variacao: 0.88,
            },
            { nome: "Euro", codigo: "EUR", cotacao: 6.1496, variacao: -0.01 },
            {
              nome: "Libra Esterlina",
              codigo: "GBP",
              cotacao: 7.4223,
              variacao: -0.77,
            },
            {
              nome: "Iene Japonês",
              codigo: "JPY",
              cotacao: 0.0376,
              variacao: -0.2,
            },
            {
              nome: "Franco Suíço",
              codigo: "CHF",
              cotacao: 6.5154,
              variacao: 0.0,
            },
            {
              nome: "Dólar Australiano",
              codigo: "AUD",
              cotacao: 3.7814,
              variacao: -1.5,
            },
            {
              nome: "Dólar Canadense",
              codigo: "CAD",
              cotacao: 4.3031,
              variacao: -0.08,
            },
          ],
        });

        // Exibe o JSON para depuração
        console.log("JSON enviado:", json_data);

        // Obter valores de entrada do usuário
        const amount = document.getElementById("amount").value;
        const target_currency =
          document.getElementById("target_currency").value;

        // Executa a função de conversão
        // Executa a função de conversão
        try {
          // A função convert_currency retorna uma Promise, então usamos await para esperar a resposta
          const result = await convert_currency(
            json_data,
            amount,
            target_currency
          );

          // Formatar o valor convertido usando o Intl.NumberFormat
          const formatter = new Intl.NumberFormat("pt-BR", {
            style: "currency",
            currency: target_currency,
          });

          // Exibe o resultado da conversão com a formatação correta
          document.getElementById(
            "result"
          ).textContent = `Resultado: ${formatter.format(result)}`;
        } catch (error) {
          // Se houver algum erro, exibe a mensagem de erro
          console.error("Erro:", error);
          document.getElementById("result").textContent = `Erro: ${error}`;
        }
      };
    </script>
  </body>
</html>
